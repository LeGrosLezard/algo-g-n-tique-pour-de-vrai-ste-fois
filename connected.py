#for paths
import os

#Librairy for treating pictures
import cv2
from PIL import Image

#Here numpy generate matrix
import numpy as np

#Show, Open, Create black picture
from operation import open_picture
from operation import show_picture
from operation import blanck_picture
from operation import find_first_points
from operation import incrementation


img = open_picture("ici.png")
copy = img.copy()
gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
blanck = blanck_picture(img)



minini = [[[[65, 33], [69, 40]]], [[[113, 60], [103, 56]]], [[[116, 83], [117, 89]]], [[[109, 140], [107, 165]]]]
treat_minini = []

for i in minini:
    treat_minini.append([i[0][0][0], i[0][0][1]])
    treat_minini.append([i[0][1][0], i[0][1][1]])



picture = ['images/blanck/contour6blanck.jpg', 
           'images/blanck/contour2blanck.jpg', 
           'images/blanck/contour4blanck.jpg',
           'images/blanck/contour8blanck.jpg',
           'images/blanck/contour10blanck.jpg', 
           'images/blanck/contour0blanck.jpg',]


a = [[69, 14], [70, 14], [71, 14], [72, 14], [73, 14], [74, 14], [75, 14], [76, 14], [77, 14], [78, 14], [78, 15], [78, 16], [78, 17], [78, 18], [78, 19], [77, 19], [77, 20], [76, 20], [75, 20], [74, 20], [73, 20], [72, 20], [72, 21], [71, 21], [71, 22], [70, 22], [70, 23], [70, 24], [69, 24], [69, 25], [69, 26], [68, 26], [68, 27], [68, 28], [67, 28], [67, 29], [67, 30], [66, 30], [66, 31], [66, 32], [65, 32], [65, 33], [64, 33], [63, 33], [62, 33], [60, 33], [61, 33], [60, 32], [60, 31], [60, 30], [60, 29], [60, 28], [61, 28], [61, 27], [61, 26], [61, 25], [62, 25], [62, 24], [62, 23], [62, 22], [63, 22], [63, 21], [64, 21], [64, 20], [64, 19], [65, 19], [65, 18], [65, 17], [66, 17], [66, 16], [67, 16], [67, 15], [68, 15], [69, 15], [69, 14]]

bb =[[72, 35], [73, 35], [74, 35], [75, 35], [76, 35], [77, 35], [78, 35], [79, 35], [80, 35], [81, 35], [82, 35], [83, 35], [84, 35], [85, 35], [86, 35], [87, 35], [88, 35], [89, 35], [90, 35], [91, 35], [92, 35], [93, 35], [94, 35], [95, 35], [96, 35], [97, 35], [98, 35], [99, 35], [100, 35], [101, 35], [102, 35], [103, 35], [104, 35], [105, 35], [106, 35], [107, 35], [108, 35], [109, 35], [110, 35], [111, 35], [111, 36], [112, 36], [113, 36], [114, 36], [115, 36], [115, 37], [116, 37], [117, 37], [117, 38], [118, 38], [118, 39], [119, 39], [119, 40], [119, 41], [120, 41], [120, 42], [120, 43], [121, 43], [121, 44], [121, 45], [121, 46], [121, 47], [121, 48], [121, 49], [121, 50], [121, 51], [121, 52], [121, 53], [121, 54], [121, 55], [120, 55], [120, 56], [120, 57], [119, 57], [119, 58], [118, 58], [117, 58], [116, 58], [116, 59], [115, 59], [114, 59], [113, 59], [113, 60], [112, 60], [111, 60], [109, 60], [110, 60], [109, 59], [109, 58], [109, 57], [109, 56], [109, 55], [109, 54], [110, 54], [111, 54], [111, 53], [112, 53], [112, 52], [113, 52], [114, 52], [114, 51], [115, 51], [115, 50], [115, 49], [115, 48], [114, 47], [115, 47], [114, 46], [113, 45], [114, 45], [112, 44], [113, 44], [111, 43], [112, 43], [111, 42], [109, 42], [110, 42], [109, 41], [108, 41], [107, 41], [106, 41], [105, 41], [104, 41], [103, 41], [102, 41], [101, 41], [100, 41], [99, 41], [98, 41], [97, 41], [96, 41], [95, 41], [94, 41], [93, 41], [92, 41], [91, 41], [90, 41], [89, 41], [88, 41], [87, 41], [86, 41], [85, 41], [84, 41], [83, 41], [82, 41], [81, 41], [80, 41], [79, 41], [78, 41], [77, 41], [76, 41], [75, 41], [74, 41], [73, 41], [71, 41], [72, 41], [71, 40], [69, 40], [70, 40], [69, 39], [69, 38], [69, 37], [70, 37], [70, 36], [71, 36], [71, 35], [72, 35]]

c = [[95, 56], [96, 56], [97, 56], [98, 56], [99, 56], [100, 56], [101, 56], [102, 56], [103, 56], [103, 57], [103, 58], [103, 59], [103, 60], [103, 61], [102, 61], [102, 62], [101, 62], [100, 62], [99, 62], [98, 62], [97, 62], [96, 62], [96, 63], [95, 63], [94, 63], [93, 63], [92, 63], [91, 63], [90, 63], [89, 63], [88, 63], [88, 64], [87, 64], [86, 64], [85, 64], [84, 64], [83, 64], [82, 64], [81, 64], [80, 64], [79, 64], [78, 64], [77, 64], [76, 64], [75, 64], [74, 64], [73, 64], [72, 64], [71, 64], [70, 64], [70, 65], [69, 65], [68, 65], [68, 66], [67, 66], [67, 67], [67, 68], [67, 69], [68, 69], [68, 70], [69, 70], [69, 71], [70, 71], [71, 71], [71, 72], [72, 72], [73, 72], [73, 73], [74, 73], [75, 73], [76, 73], [76, 74], [77, 74], [78, 74], [79, 74], [80, 74], [80, 75], [81, 75], [82, 75], [83, 75], [84, 75], [85, 75], [86, 75], [87, 75], [88, 75], [89, 75], [90, 75], [91, 75], [92, 75], [93, 75], [94, 75], [95, 75], [96, 75], [97, 75], [98, 75], [99, 75], [100, 75], [101, 75], [102, 75], [103, 75], [104, 75], [105, 75], [106, 75], [107, 75], [108, 75], [108, 76], [109, 76], [110, 76], [111, 76], [112, 76], [112, 77], [113, 77], [114, 77], [114, 78], [115, 78], [115, 79], [116, 79], [116, 80], [116, 81], [116, 82], [116, 83], [115, 83], [114, 83], [113, 83], [112, 83], [111, 83], [109, 83], [110, 83], [109, 82], [107, 82], [108, 82], [107, 81], [106, 81], [105, 81], [104, 81], [103, 81], [102, 81], [101, 81], [100, 81], [99, 81], [98, 81], [97, 81], [96, 81], [95, 81], [94, 81], [93, 81], [92, 81], [91, 81], [90, 81], [89, 81], [88, 81], [87, 81], [86, 81], [85, 81], [84, 81], [83, 81], [82, 81], [81, 81], [79, 81], [80, 81], [79, 80], [78, 80], [77, 80], [76, 80], [74, 80], [75, 80], [74, 79], [73, 79], [72, 79], [70, 79], [71, 79], [70, 78], [68, 78], [69, 78], [68, 77], [67, 77], [65, 77], [66, 77], [64, 76], [65, 76], [63, 75], [64, 75], [62, 74], [63, 74], [61, 73], [62, 73], [61, 72], [61, 71], [61, 70], [60, 69], [61, 69], [60, 68], [60, 67], [60, 66], [61, 66], [61, 65], [61, 64], [61, 63], [61, 62], [62, 62], [62, 61], [63, 61], [63, 60], [64, 60], [65, 60], [65, 59], [66, 59], [67, 59], [68, 59], [68, 58], [69, 58], [70, 58], [71, 58], [72, 58], [73, 58], [74, 58], [75, 58], [76, 58], [77, 58], [78, 58], [79, 58], [80, 58], [81, 58], [82, 58], [83, 58], [84, 58], [85, 58], [86, 58], [87, 58], [87, 57], [88, 57], [89, 57], [90, 57], [91, 57], [92, 57], [93, 57], [94, 57], [95, 57], [95, 56]]

d = [[108, 89], [109, 89], [110, 89], [111, 89], [112, 89], [113, 89], [114, 89], [115, 89], [116, 89], [117, 89], [117, 90], [117, 91], [117, 92], [116, 92], [116, 93], [115, 93], [115, 94], [114, 94], [113, 94], [113, 95], [112, 95], [111, 95], [111, 96], [110, 96], [109, 96], [108, 96], [108, 97], [107, 97], [106, 97], [105, 97], [104, 97], [103, 97], [102, 97], [101, 97], [100, 97], [99, 97], [98, 97], [97, 97], [96, 97], [95, 97], [94, 97], [94, 98], [93, 98], [92, 98], [91, 98], [90, 98], [89, 98], [88, 98], [87, 98], [86, 98], [85, 98], [84, 98], [83, 98], [82, 98], [81, 98], [80, 98], [79, 98], [78, 98], [77, 98], [76, 98], [75, 98], [75, 99], [74, 99], [73, 99], [72, 99], [71, 99], [71, 100], [70, 100], [69, 100], [69, 101], [68, 101], [68, 102], [67, 102], [67, 103], [66, 103], [66, 104], [65, 104], [65, 105], [64, 105], [64, 106], [64, 107], [65, 107], [65, 108], [65, 109], [66, 109], [66, 110], [67, 110], [67, 111], [68, 111], [68, 112], [69, 112], [70, 112], [70, 113], [71, 113], [72, 113], [73, 113], [73, 114], [74, 114], [75, 114], [76, 114], [77, 114], [77, 115], [78, 115], [79, 115], [80, 115], [81, 115], [82, 115], [83, 115], [84, 115], [85, 115], [86, 115], [87, 115], [88, 115], [89, 115], [90, 115], [91, 115], [92, 115], [93, 115], [94, 115], [95, 115], [96, 115], [97, 115], [98, 115], [99, 115], [100, 115], [101, 115], [102, 115], [103, 115], [104, 115], [105, 115], [106, 115], [107, 115], [107, 116], [108, 116], [109, 116], [110, 116], [111, 116], [112, 116], [113, 116], [113, 117], [114, 117], [115, 117], [116, 117], [116, 118], [117, 118], [118, 118], [118, 119], [119, 119], [120, 119], [120, 120], [121, 120], [121, 121], [122, 121], [122, 122], [122, 123], [123, 123], [123, 124], [123, 125], [123, 126], [124, 126], [124, 127], [124, 128], [124, 129], [124, 130], [124, 131], [123, 131], [123, 132], [123, 133], [123, 134], [122, 134], [122, 135], [122, 136], [121, 136], [120, 136], [120, 137], [119, 137], [118, 137], [118, 138], [117, 138], [116, 138], [115, 138], [115, 139], [114, 139], [113, 139], [112, 139], [111, 139], [110, 139], [109, 139], [109, 140], [108, 140], [107, 140], [106, 140], [105, 140], [104, 140], [103, 140], [102, 140], [101, 140], [100, 140], [99, 140], [98, 140], [97, 140], [96, 140], [94, 140], [95, 140], [94, 139], [94, 138], [94, 137], [94, 136], [94, 135], [94, 134], [95, 134], [96, 134], [97, 134], [98, 134], [98, 133], [99, 133], [100, 133], [101, 133], [102, 133], [103, 133], [104, 133], [105, 133], [106, 133], [107, 133], [108, 133], [109, 133], [110, 133], [111, 133], [112, 133], [112, 132], [113, 132], [114, 132], [115, 132], [115, 131], [116, 131], [116, 130], [117, 130], [117, 129], [118, 129], [117, 128], [118, 128], [116, 127], [117, 127], [116, 126], [115, 125], [116, 125], [115, 124], [113, 124], [114, 124], [113, 123], [111, 123], [112, 123], [111, 122], [110, 122], [109, 122], [108, 122], [106, 122], [107, 122], [106, 121], [105, 121], [104, 121], [103, 121], [102, 121], [101, 121], [100, 121], [99, 121], [98, 121], [97, 121], [96, 121], [95, 121], [94, 121], [93, 121], [92, 121], [91, 121], [90, 121], [89, 121], [88, 121], [87, 121], [86, 121], [85, 121], [84, 121], [83, 121], [82, 121], [81, 121], [80, 121], [79, 121], [78, 121], [77, 121], [75, 121], [76, 121], [75, 120], [74, 120], [73, 120], [72, 120], [70, 120], [71, 120], [70, 119], [69, 119], [67, 119], [68, 119], [67, 118], [65, 118], [66, 118], [65, 117], [63, 117], [64, 117], [62, 116], [63, 116], [61, 115], [62, 115], [60, 114], [61, 114], [59, 113], [60, 113], [59, 112], [59, 111], [58, 110], [59, 110], [58, 109], [58, 108], [58, 107], [58, 106], [58, 105], [58, 104], [58, 103], [58, 102], [59, 102], [59, 101], [59, 100], [60, 100], [60, 99], [60, 98], [61, 98], [61, 97], [62, 97], [62, 96], [63, 96], [64, 96], [64, 95], [65, 95], [66, 95], [66, 94], [67, 94], [68, 94], [69, 94], [69, 93], [70, 93], [71, 93], [72, 93], [73, 93], [74, 93], [74, 92], [75, 92], [76, 92], [77, 92], [78, 92], [79, 92], [80, 92], [81, 92], [82, 92], [83, 92], [84, 92], [85, 92], [86, 92], [87, 92], [88, 92], [89, 92], [90, 92], [91, 92], [92, 92], [93, 92], [93, 91], [94, 91], [95, 91], [96, 91], [97, 91], [98, 91], [99, 91], [100, 91], [101, 91], [102, 91], [103, 91], [104, 91], [105, 91], [105, 90], [106, 90], [107, 90], [108, 90], [108, 89]]


a = [

['corner4', 'lign verticale', 'corner7', 'lign horrizontale', 'corner7', 'corner7', 'corner7', 'lign verticale', 'corner7', 'corner7', 'corner7', 'corner7', 'corner7', 'corner7', 'corner7', 'corner7', 'corner7', 'corner7', 'corner7', 'corner7', 'corner7', 'corner7', 'SITUATION', 'corner5', 'lign verticale', 'corner6', 'lign horrizontale', 'corner6', 'corner6', 'corner6', 'corner6', 'corner6', 'corner6', 'corner6', 'corner6', 'corner6', 'corner6', 'corner6', 'corner6', 'corner6', 'corner6', 'corner6', 'corner6'],
['corner4', 'lign verticale', 'corner4', 'corner4', 'lign verticale', 'corner4', 'corner4', 'corner4', 'corner4', 'corner4', 'corner4', 'corner4', 'corner4', 'corner4', 'corner4', 'corner7', 'lign horrizontale', 'corner7', 'corner7', 'corner7', 'corner7', 'corner7', 'corner7', 'corner7', 'SITUATION', 'corner5', 'corner6', 'lign horrizontale', 'corner6', 'corner6', 'corner6', 'corner6', 'corner6', 'corner6', 'corner6', 'corner5', 'lign horrizontale', 'corner5', 'corner5', 'corner5', 'corner5', 'corner5', 'lign verticale', 'corner5', 'corner6', 'corner6', 'corner6', 'corner6', 'corner6'],
['corner4', 'lign verticale', 'corner7', 'lign horrizontale', 'corner7', 'corner7', 'corner7', 'lign verticale', 'corner7', 'corner7', 'lign verticale', 'corner7', 'corner7', 'lign verticale', 'corner7', 'corner7', 'corner7', 'corner7', 'corner4', 'corner4', 'corner4', 'corner4', 'corner4', 'corner4', 'corner4', 'corner4', 'corner4', 'corner4', 'corner4', 'corner4', 'lign verticale', 'corner4', 'corner4', 'lign verticale', 'corner4', 'corner4', 'lign verticale', 'corner4', 'corner4', 'corner4', 'corner4', 'corner4', 'corner4', 'SITUATION', 'lign horrizontale', 'corner5', 'lign verticale', 'corner5', 'corner5', 'lign verticale', 'corner5', 'lign verticale', 'corner5', 'corner5', 'corner5', 'corner5', 'corner5', 'corner5', 'corner5', 'corner5', 'corner6', 'corner6', 'corner6', 'lign horrizontale', 'corner6', 'corner6', 'corner6', 'corner6', 'corner6', 'corner6', 'corner6', 'corner6', 'corner6', 'lign verticale', 'corner6', 'corner6', 'lign verticale', 'corner6'],
['corner4', 'lign verticale', 'corner7', 'corner7', 'corner7', 'corner7', 'corner7', 'corner7', 'corner7', 'corner7', 'corner7', 'corner7', 'corner7', 'corner7', 'lign verticale', 'corner7', 'corner7', 'lign verticale', 'corner7', 'corner7', 'lign verticale', 'corner7', 'corner7', 'corner7', 'corner7', 'corner7', 'corner7', 'corner7', 'corner7', 'corner7', 'corner7', 'corner7', 'corner7', 'corner4', 'corner4', 'corner4', 'corner4', 'corner4', 'corner4', 'corner4', 'corner4', 'corner4', 'corner4', 'corner4', 'corner4', 'corner4', 'corner4', 'lign verticale', 'corner4', 'corner4', 'lign verticale', 'corner4', 'corner4', 'lign verticale', 'corner4', 'corner4', 'corner4', 'corner4', 'corner4', 'corner4', 'corner4', 'corner4', 'corner4', 'corner4', 'corner4', 'corner4', 'corner4', 'corner4', 'corner7', 'lign horrizontale', 'corner7', 'corner7', 'corner7', 'corner7', 'corner7', 'corner7', 'corner7', 'corner7', 'corner7', 'corner7', 'corner7', 'lign verticale', 'SITUATION', 'corner5', 'lign verticale', 'corner6', 'lign horrizontale', 'corner6', 'lign verticale', 'corner6', 'corner6', 'lign verticale', 'corner6', 'corner6', 'corner6', 'corner6', 'corner6', 'corner6', 'corner6', 'corner6', 'corner5', 'corner5', 'corner5', 'corner5', 'corner5', 'corner5', 'lign verticale', 'corner5', 'lign verticale', 'corner5', 'lign verticale', 'corner5', 'corner5', 'corner5', 'corner5', 'corner5', 'corner5', 'corner5', 'corner5', 'corner6', 'lign horrizontale', 'corner6', 'corner6', 'corner6', 'corner6', 'corner6', 'corner6', 'corner6', 'corner6', 'corner6', 'corner6', 'corner6', 'corner6', 'corner6', 'corner6', 'corner6', 'lign verticale', 'corner6', 'corner6', 'lign verticale', 'corner6', 'corner6', 'lign verticale', 'corner6', 'corner6', 'corner6']

    ]

b = []

for i in a:
    for j in i:
        if j == "SITUATION":pass
        else:b.append(j)


dico_schema = {}

for i in b:
    dico_schema[i] = 0





for nb in range(len(minini)):


    img1 = open_picture(picture[nb])
    img2 = open_picture(picture[nb+1])

    gray1 = cv2.cvtColor(img1, cv2.COLOR_BGR2GRAY)
    gray2 = cv2.cvtColor(img2, cv2.COLOR_BGR2GRAY)




    for y in range(gray2.shape[1]):
        for x in range(gray2.shape[0]):
            if gray2[x, y] > 100:
                blanck[x, y] = 255, 255, 255
    




    try:
        print(treat_minini[nb], treat_minini[nb+1])
        blanck[treat_minini[nb][0], treat_minini[nb][1]] = 0, 0, 255
        blanck[treat_minini[nb+1][0], treat_minini[nb+1][1]] = 0, 0, 255


        for index, i in enumerate(a[nb]):
            if i == "SITUATION":
                schema1 = a[nb][index-1:index]
                print(schema1)
                schema2 = a[nb][index+1:index + 5]
                print(schema2)
            
            


                for cnter, i in enumerate(b):

                    if i == schema1[0]:
                        for key, value in dico_schema.items():
                            if key == b[cnter + 1]:
                                dico_schema[key] += 1

                print(dico_schema)





                x = treat_minini[nb][0]
                y = treat_minini[nb][1]

                          #0     #1     #2    #3      #4     #5     #6    #7
                listex = [x+1,   x-1,   x,    x,      x+1,   x-1,   x+1,  x-1]
                listey = [y,       y,   y+1,  y-1,    y+1,   y-1,   y-1,  y+1]


                for key, value in dico_schema.items():
                    ocontinuer = True
                    if value > 0:
                        while ocontinuer:
                            print(key)




                            if key == "corner4":


                                listex = [x+1,      x,         x+1,     x+1,  x-1]
                                listey = [y,          y+1,     y+1,      y-1,  y+1]
                                
                                for i in range(len(listex)):
                                    if blanck[listex[i], listey[i]][0] == 255 and\
                                       blanck[listex[i], listey[i]][1] == 255 and\
                                       blanck[listex[i], listey[i]][2] == 255:
                                        blanck[x, y] = 255, 255, 255
                                        blanck[x + 1, y] = 255, 255, 255
                                        copy1 = cv2.resize(blanck, (800, 800))
                                        show_picture("copy1", copy1, 0, "")


                                        for y in range(gray1.shape[1]):
                                            for x in range(gray1.shape[0]):
                                                if gray1[x, y] > 100:
                                                    blanck[x, y] = 255, 255, 255


                                        ocontinuer = False




                                print(x, y)
                                blanck[x, y] = 255, 255, 255
                                blanck[x + 1, y] = 255, 255, 255
                                copy1 = cv2.resize(blanck, (800, 800))
                                show_picture("copy1", copy1, 0, "")



                                x+=1
                                y += 1


                                











    except:pass












    cv2.imwrite("icifinal.png", img)
    copy1 = cv2.resize(blanck, (800, 800))
    show_picture("copy1", copy1, 0, "")












































